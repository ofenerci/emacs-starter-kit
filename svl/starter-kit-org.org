#+TITLE: Orgmod configuration
* Включение режима Org для файлов с расширением =.org= и =.pub=
#+begin_src emacs-lisp
  (add-to-list 'auto-mode-alist '("\\.org$\\'" . org-mode))
  (add-to-list 'auto-mode-alist '("\\.pub$\\'" . org-mode))
  (require 'poly-org)
  (add-to-list 'auto-mode-alist '("\\.org" . poly-org-mode))
#+end_src

* Активация ~remember-mode~
#+begin_src emacs-lisp
(require 'remember)
;(org-remember-insinuate)
#+end_src

* Установка комбинаций клавиш
#+begin_src emacs-lisp
(global-set-key "\C-cl" 'org-store-link)
(global-set-key "\C-cc" 'org-capture)
(global-set-key "\C-ca" 'org-agenda)
(global-set-key "\C-cc" 'org-iswitchb)
(global-set-key "\C-cr" 'org-capture)
(defun open-org-journal-file ()
  (interactive)
  (find-file "~/Dropbox/org/journal.org"))
(global-set-key "\C-cj" 'open-org-journal-file)
#+end_src

#+begin_src emacs-lisp
(setq org-log-done 'time)
#+end_src

* Мои =.org= файлы для реализации *GTD*
#+begin_src emacs-lisp
(setq org-agenda-files (list "~/Dropbox/org/gtd.org"
       	        		     "~/Dropbox/org/someday.org" 
			                 "~/Dropbox/org/journal.org"
	               		     "~/Dropbox/org/weeklyreview.org" 
            			     "~/Dropbox/org/council010202.org" 
			                 "~/Dropbox/org/bodybuilding.org"
			           ))
#+end_src

* Настройка шаблонов ~remember~
#+begin_src emacs-lisp
(setq org-capture-templates
      '(("t" "Todo" entry (file+headline "~/Dropbox/org/gtd.org" "ЗАДАЧИ") 
		 "** TODO %^{Brief Description} %^g\n%?\nAdded: %U" )
		("c" "Call" entry (file+headline "~/Dropbox/org/gtd.org" "ЗАДАЧИ")
		 "** CALL %^{Brief Description} %^g\n%?\nAdded: %U" )
		("o" "Outside"  (file+headline "~/Dropbox/org/gtd.org" "ЗАДАЧИ")
		 "** %^{Brief Description} %^g\n%?\nAdded: %U" )
		("h" "Check" entry (file+headline "~/Dropbox/org/gtd.org" "ЗАДАЧИ")
		 "* CHECK %^{Brief Description} %^g\n%?\nAdded: %U")
		("j" "Journal" entry (file+headline "~/Dropbox/org/journal.org" "Заметки")
		 "** %^{Head Line} %U %^g\n%i%?" )
		("s" "Someday" entry (file+headline "~/Dropbox/org/someday.org" "Когда-нибудь/может быть")
		 "** %^{Someday Heading} %U\n%?\n" )))
#+end_src

* Настройка показа буфера ~Agenda~
#+begin_src emacs-lisp
(setq org-deadline-warning-days 7)
(setq org-mobile-directory "~/Dropbox/Public/MobileOrg/")
(setq org-directory "~/Dropbox/org/")
(setq org-mobile-inbox-for-pull "~/Dropbox/org/inbox.org")

(setq org-agenda-prefix-format 
	  '((agenda . " %i %-30:c%?-12t% s")
		(timeline . "  % s")
		(todo . " %i %-30:c")
		(tags . " %i %-30:c")
		(search . " %i %-30:c")))

(setq org-agenda-custom-commands
  '(
	("w" "Список дел, которые можно сделать на работе"
	 ((agenda)
	  (tags-todo "@ИНСТИТУТ")
	  (tags-todo "@БГУ")
	  (tags-todo "@КОМПЬЮТЕР")
	  (tags-todo "@ВЫЕЗДЫ")))
	
	("h" "Список дел, которые можно сделать дома" 
	 ((agenda)
	  (tags-todo "@ДОМ") 
	  (tags-todo "@КОМПЬЮТЕР") 
	  (tags-todo "@ВЫЕЗДЫ")))
	
	("d" "Список дел на день"
	 ((agenda "" ((org-agenda-ndays 1)
		      (org-agenda-sorting-strategy
		       (quote ((agenda time-up priority-down tag-up))))
		      (org-deadline-warning-days 5)))))
	
	("P" "Printed agenda"
	 (
;(agenda "" ((org-agenda-ndays 7)                      ;; overview of appointments
;		      (org-agenda-start-on-weekday nil)         ;; calendar begins today
;		      (org-agenda-repeating-timestamp-show-all t)
;		      (org-agenda-entry-types '(:timestamp :sexp))))
	  (agenda "" ((org-agenda-ndays 7)                      ;; daily agenda
		      (org-deadline-warning-days 7)             ;; 7 day advanced warning for deadlines
		      (org-agenda-todo-keyword-format "[ ]")
		      (org-agenda-scheduled-leaders '("" ""))
		      (org-agenda-prefix-format "%t%s")))
	  (todo "TODO"                                          ;; todos sorted by context
		((org-agenda-prefix-format "[ ] %T: ")
		 (org-agenda-sorting-strategy '(tag-up priority-down))
		 (org-agenda-todo-keyword-format "")
		 (org-agenda-overriding-header "\nЗадачи по контексту\n------------------\n"))))
	 ((org-agenda-compact-blocks t)
	  (org-agenda-remove-tags t)
      (ps-font-size 12.0)
      (ps-print-header nil)
	  (ps-number-of-columns 2)
	  (ps-landscape-mode t))
	 ("~/Dropbox/org/documents/A/agendas/agenda.ps")))
      )
#+end_src
* Настройка рефайлинга
#+begin_src emacs-lisp
(setq org-refile-targets (quote (("gtd.org" :maxlevel . 1)
				 ("someday.org" :level . 2))))
#+end_src
* Функция для =TODO= записи зависящей от нескольких вложенных
#+begin_src emacs-lisp
(defun org-summary-todo (n-done n-not-done)
  "Switch entry to DONE when all subentries are done, to TODO otherwise."
  (let (org-log-done org-log-states)   ; turn off logging
    (org-todo (if (= n-not-done 0) "DONE" "TODO"))))
     
(add-hook 'org-after-todo-statistics-hook 'org-summary-todo)
#+end_src

* Реализация таймера *Pomodoro*
#+begin_src emacs-lisp
(add-to-list 'org-modules 'org-timer) ;; Activate the org-timer module 
(setq org-timer-default-timer 25) ;; Set a default value for the timer, for example
(add-hook 'org-clock-in-hook 
	  '(lambda ()  
	     (if (not org-timer-current-timer) (org-timer-set-timer '(16)))
	     )
) 
(add-hook 'org-clock-out-hook
	  '(lambda ()  (setq org-mode-line-string nil)))

(add-hook 'org-timer-done-hook 
	  '(lambda () 
	     (start-process "orgmode" nil "~/Dropbox/org/scripts/pomodoro")
	     ) 
)
#+end_src

* Реализация напоминаний о событиях
#+begin_src emacs-lisp
(require 'appt)
(appt-activate t)

(setq appt-message-warning-time 5) ; Show notification 5 minutes before event
(setq appt-display-interval appt-message-warning-time) ; Disable multiple reminders
(setq appt-display-mode-line nil)

; Use appointment data from org-mode
(defun my-org-agenda-to-appt ()
  (interactive)
  (setq appt-time-msg-list nil)
  (org-agenda-to-appt))

; Update alarms when...
; (1) ... Starting Emacs
(my-org-agenda-to-appt)

; (2) ... Everyday at 12:05am (useful in case you keep Emacs always on)
(run-at-time "12:05am" (* 24 3600) 'my-org-agenda-to-appt)

; Display appointments as a window manager notification
(setq appt-disp-window-function 'my-appt-display)
(setq appt-delete-window-function (lambda () t))

(setq my-appt-notification-app (concat (getenv "HOME") "/Dropbox/org/scripts/appt-notification"))

(defun my-appt-display (min-to-app new-time msg)
  (if (atom min-to-app)
    (start-process "my-appt-notification-app" nil my-appt-notification-app min-to-app msg)
  (dolist (i (number-sequence 0 (1- (length min-to-app))))
    (start-process "my-appt-notification-app" nil my-appt-notification-app (nth i min-to-app) (nth i msg)))))
#+end_src

* Включаем ~typopunt~ в режиме ~org-mode~
#+begin_src emacs-lisp
(add-hook 'org-mode-hook 'turn-on-typopunct-mode)
#+end_src
* Открываем doc файлы в режиме ~org-mode~ во внешних приложениях
#+begin_src emacs-lisp
(add-hook 'org-mode-hook
  '(lambda ()
        (setq org-file-apps
              (append '(
                        ("\\.doc\\'" . default)
                       ) org-file-apps
              )
        )
   )
)
(add-hook 'org-mode-hook
  '(lambda ()
        (setq org-file-apps
              (append '(
                        ("\\.odt\\'" . default)
                       ) org-file-apps
              )
        )
   )
)
#+end_src

* Настройка ~org-caldav~
#+begin_src emacs-lisp
(require 'org-caldav)
(setq org-caldav-url "https://www.google.com/calendar/dav")
(setq org-caldav-files '("~/Dropbox/org/appointments.org"))
(setq org-caldav-calendars
  '((:calendar-id "g23o82ju0h3dqcpsis6pcvuol4@group.calendar.google.com" 
     :inbox "~/Dropbox/org/workcalendar.org")
    (:calendar-id "912e6vc5c0t8prbmg94gma4vrk@group.calendar.google.com"
     :inbox "~/Dropbox/org/bsucalendar.org")
    (:calendar-id "ubjmiual92h9b0t9vpb4av0kvs@group.calendar.google.com"
     :inbox "~/Dropbox/org/financialcalendar.org") 
    (:calendar-id "sergey.lemeshevsky@gmail.com"
     :inbox "~/Dropbox/org/personalcalendar.org")) )
(setq org-caldav-select-tags '("@КАЛЕНДАРЬ"))
(setq org-icalendar-timezone "Europe/Minsk")
(global-set-key (kbd "<f3>") 'org-caldav-sync)
#+end_src
* Добавляем шифрования файла с паролем для календаря
#+begin_src emacs-lisp
(require 'epa-file)  
#+end_src
