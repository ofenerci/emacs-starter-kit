#+TITLE: Orgmod configuration
* Включение режима Org для файлов с расширением =.org=
#+begin_src emacs-lisp
(add-to-list 'auto-mode-alist '("\\.org\\'" . org-mode))
#+end_src

* Активация ~remember-mode~
#+begin_src emacs-lisp
(org-remember-insinuate)
#+end_src

* Установка комбинаций клавиш
#+begin_src emacs-lisp
(global-set-key "\C-cl" 'org-store-link)
(global-set-key "\C-cc" 'org-capture)
(global-set-key "\C-ca" 'org-agenda)
(global-set-key "\C-cc" 'org-iswitchb)
(global-set-key "\C-cr" 'org-remember)
#+end_src

#+begin_src emacs-lisp
(setq org-log-done 'time)
#+end_src

* Мои org файлы для реализации GTD
#+begin_src emacs-lisp
(setq org-agenda-files (list "~/Dropbox/org/gtd.org"
                             "~/Dropbox/org/calendar.org"
			     "~/Dropbox/org/someday.org" 
			     "~/Dropbox/org/journal.org"
			     "~/Dropbox/org/weeklyreview.org" 
			     "~/Dropbox/org/council010202.org" 
			     "~/Dropbox/org/bodybuilding.org"
			     ))
#+end_src
* Настройка показа буфера ~Agenda~
#+begin_src emacs-lisp
(setq org-deadline-warning-days 7)
(setq org-mobile-directory "~/Dropbox/Public/MobileOrg/")
(setq org-directory "~/Dropbox/org/")
(setq org-mobile-inbox-for-pull "~/Dropbox/org/inbox.org")

(setq org-remember-templates
      '(("Todo" ?t "* TODO %^{Brief Description} %^g\n%?\nAdded: %U" "~/Dropbox/org/gtd.org" "ЗАДАЧИ")
	("Call" ?c "* CALL %^{Brief Description} %^g\n%?\nAdded: %U" "~/Dropbox/org/gtd.org" "ЗАДАЧИ")
	("Outside" ?o "** %^{Brief Description} %^g\n%?\nAdded: %U" "~/Dropbox/org/gtd.org" "ЗАДАЧИ")
	("Journal" ?j "** %^{Head Line} %U %^g\n%i%?" "~/Dropbox/org/journal.org" "Заметки")
	("Someday" ?s "** %^{Someday Heading} %U\n%?\n" "~/Dropbox/org/someday.org" "Когда-нибудь/может быть")))

(setq org-agenda-custom-commands
      '(
	("w" "Список дел, которые можно сделать на работе"
	 ((agenda)
	  (tags-todo "@ИНСТИТУТ")
          (tags-todo "@БГУ")
	  (tags-todo "@КОМПЬЮТЕР")
	  (tags-todo "@ВЫЕЗДЫ")))
	
	("h" "Список дел, которые можно сделать дома" 
	 ((agenda)
	  (tags-todo "@ДОМ") 
	  (tags-todo "@КОМПЬЮТЕР") 
	  (tags-todo "@ВЫЕЗДЫ")))
	
	("d" "Список дел на день"
	 ((agenda "" ((org-agenda-ndays 1)
		      (org-agenda-sorting-strategy
		       (quote ((agenda time-up priority-down tag-up))))
		      (org-deadline-warning-days 0)))))
	
	("P" "Printed agenda"
	 ((agenda "" ((org-agenda-ndays 7)                      ;; overview of appointments
		      (org-agenda-start-on-weekday nil)         ;; calendar begins today
		      (org-agenda-repeating-timestamp-show-all t)
		      (org-agenda-entry-types '(:timestamp :sexp))))
	  (agenda "" ((org-agenda-ndays 1)                      ;; daily agenda
		      (org-deadline-warning-days 7)             ;; 7 day advanced warning for deadlines
		      (org-agenda-todo-keyword-format "[ ]")
		      (org-agenda-scheduled-leaders '("" ""))
		      (org-agenda-prefix-format "%t%s")))
	  (todo "TODO"                                          ;; todos sorted by context
		((org-agenda-prefix-format "[ ] %T: ")
		 (org-agenda-sorting-strategy '(tag-up priority-down))
		 (org-agenda-todo-keyword-format "")
		 (org-agenda-overriding-header "\nЗадачи по контексту\n------------------\n"))))
	 ((org-agenda-compact-blocks t)
	  (org-agenda-remove-tags t)
	  (ps-number-of-columns 2)
	  (ps-landscape-mode t))
	 ("~/Dropbox/org/documents/A/agendas/agenda.ps")))
      )
  
(setq org-refile-targets (quote (("gtd.org" :maxlevel . 1)
				 ("someday.org" :level . 2))))

(defun org-summary-todo (n-done n-not-done)
  "Switch entry to DONE when all subentries are done, to TODO otherwise."
  (let (org-log-done org-log-states)   ; turn off logging
    (org-todo (if (= n-not-done 0) "DONE" "TODO"))))
     
(add-hook 'org-after-todo-statistics-hook 'org-summary-todo)
#+end_src

* Реализация таймера Pomodoro
#+begin_src emacs-lisp
(add-to-list 'org-modules 'org-timer) ;; Activate the org-timer module 
(setq org-timer-default-timer 25) ;; Set a default value for the timer, for example
(add-hook 'org-clock-in-hook 
	  '(lambda ()  
	     (if (not org-timer-current-timer) (org-timer-set-timer '(16)))
	     )
) 
(add-hook 'org-clock-out-hook
	  '(lambda ()  (setq org-mode-line-string nil)))

(add-hook 'org-timer-done-hook 
	  '(lambda () 
	     (start-process "orgmode" nil "~/Dropbox/org/scripts/pomodoro")
	     ) 
)
#+end_src

* Запускаем при старте ~org-mobile-pull~
#+begin_src emacs-lisp
;; (org-mobile-pull) ;; run org-mobile-pull at startup
#+end_src

* Включаем ~typopunt~ в режиме ~org-mode~
#+begin_src emacs-lisp
(add-hook 'org-mode-hook 'turn-on-typopunct-mode)
#+end_src

* Функции для обратной синхронизации с  Google календарем
#+begin_src emacs-lisp
;;; define categories that should be excluded
(setq org-export-exclude-category (list "Google"))

;;; define filter. The filter is called on each entry in the agenda.
;;; It defines a regexp to search for two timestamps, gets the start
;;; and end point of the entry and does a regexp search. It also
;;; checks if the category of the entry is in an exclude list and
;;; returns either t or nil to skip or include the entry.

(defun org-mycal-export-limit ()
  "Limit the export to items that have a date, time and a range. Also exclude certain categories."
  (setq org-tst-regexp "<\\([0-9]\\{4\\}-[0-9]\\{2\\}-[0-9]\\{2\\} ... [0-9]\\{2\\}:[0-9]\\{2\\}[^\r\n>]*?\\)>")
  (setq org-tstr-regexp (concat org-tst-regexp "--?-?" org-tst-regexp))
  (save-excursion
    ; get categories
    (setq mycategory (org-get-category))
    ; get start and end of tree
    (org-back-to-heading t)
    (setq mystart    (point))
    (org-end-of-subtree)
    (setq myend      (point))
    (goto-char mystart)
    ; search for timerange
    (setq myresult (re-search-forward org-tstr-regexp myend t))
    ; search for categories to exclude
    (setq mycatp (member mycategory org-export-exclude-category))
    ; return t if ok, nil when not ok
    (if (and myresult (not mycatp)) t nil)))

;;; activate filter and call export function
(defun org-mycal-export ()
  (let ((org-icalendar-verify-function 'org-mycal-export-limit))
    (org-export-icalendar-combine-agenda-files)))

(setq org-icalendar-use-scheduled '(todo-start event-if-todo))
(setq org-icalendar-use-deadline '(todo-start event-if-todo))
#+end_src
* Настройка ~org-caldav~
#+begin_src emacs-lisp
(require 'org-caldav)
(setq org-caldav-url "https://www.google.com/calendar/dav")
(setq org-caldav-calendar-id "g23o82ju0h3dqcpsis6pcvuol4@group.calendar.google.com")
(setq org-caldav-inbox "~/Dropbox/org/calendar.org")
(setq org-caldav-files '("~/Dropbox/org/gtd.org"))
(setq org-caldav-select-tags '("@КАЛЕНДАРЬ" "@ЗАДАЧИ"))
(setq org-icalendar-timezone "Europe/Minsk")
(global-set-key (kbd "<f3>") 'org-caldav-sync)
#+end_src
* Добавляем шифрования файла с паролем для календаря
#+begin_src emacs-lisp
(require 'epa-file)  
#+end_src
