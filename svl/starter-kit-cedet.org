#+TITLE: CEDET configurations
* Включение Semantic
1. Перед включением ~Semantic~ необходимо заполнить список
   ~semsntic-default-submodes~
   1. Включение глобальной поддержки ~Semanticmdb~
      #+begin_src emacs-lisp 
(add-to-list 'semantic-default-submodes 'global-semanticdb-minor-mode)
      #+end_src
   2. Включение режима автоматического запоминания информации о
      редактируемых тагах, так что можно перейти к ним позднее с
      помощью команды ~semantic-mrub-switch-tags~
      #+begin_src emacs-lisp
(add-to-list 'semantic-default-submodes 'global-semantic-mru-bookmark-mode)
      #+end_src
   3. Активация контекстного меню, привязанного к правой клавише мыши
      (у меня не сработало)
      #+begin_src emacs-lisp
; (add-to-list 'semantic-default-submodes 'global-cedet-m3-minor-mode)
      #+end_src
   4. Активация подстветки первой строки текущего тага (функции,
      класса и т.п.)
      #+begin_src emacs-lisp
(add-to-list 'semantic-default-submodes 'global-semantic-highlight-func-mode)
      #+end_src
   5. Активация автоматического анализа кода в буферах когда Emacs
      «свободен» и ожидает ввода данных от пользователя (idle time) 
      #+begin_src emacs-lisp
(add-to-list 'semantic-default-submodes 'global-semantic-idle-scheduler-mode)
      #+end_src
   6. Активация показа возможных дополнений имен во время ожидания
      ввода. Требует чтобы был включен
      ~global-semantic-idle-scheduler-mode~
      #+begin_src emacs-lisp
(add-to-list 'semantic-default-submodes 'global-semantic-idle-completions-mode)
      #+end_src
   7. Активация показа информации о текущем таге во время ожидания
      ввода. Требует чтобы был включен 
      ~global-semantic-idle-scheduler-mode~ 
      #+begin_src emacs-lisp
(add-to-list 'semantic-default-submodes 'global-semantic-idle-summary-mode)
      #+end_src
2. Включаем ~Semantic~ 
   #+begin_src emacs-lisp
   (semantic-mode 1) 
   #+end_src
3. Для использования  возможности по дополнению имен и показу
   информации о функциях и классах необходимо загрузить пакет
   ~semantic/ia~
   #+begin_src emacs-lisp
(require 'semantic/ia)
   #+end_src

* Системные подключаемые файлы
1. Если вы используете ~GCC~ для программирования на ~C~ & ~C++~, то пакет
   может автоматически получить данные о нахождении системных
   подключаемых файлов. Для этого вам необходимо загрузить пакет
   ~semantic/bovine/gcc~:
   #+begin_src emacs-lisp
(require 'semantic/bovine/gcc)
   #+end_src

* Настройка Semanticdb
1. Включаем поддержку ~gnu global~ 
   #+begin_src emacs-lisp
;;(when (cedet-gnu-global-version-check t)
;;  (semanticdb-enable-gnu-global-databases 'c-mode)
;;  (semanticdb-enable-gnu-global-databases 'c++-mode))
  #+end_src
2. Включаем поддержку ~ctags~ для основных языков: ~Unix Shell~,
   ~Perl~, ~Pascal~, ~Tcl~, ~Fortran~, ~Asm~
   #+begin_src emacs-lisp
;; (when (cedet-ectag-version-check)
;;  (semantic-load-enable-primary-exuberent-ctags-support))
   #+end_src
3. Настройка CEDET для работы с библиотекой Qt4.
   #+begin_src emacs-lisp
;;(setq qt4-base-dir "/usr/include/qt4")
;;(semantic-add-system-include qt4-base-dir 'c++-mode)
;;(add-to-list 'auto-mode-alist (cons qt4-base-dir 'c++-mode))
;;(add-to-list 'semantic-lex-c-preprocessor-symbol-file (concat qt4-base-dir "/Qt/qconfig.h"))
;;(add-to-list 'semantic-lex-c-preprocessor-symbol-file (concat qt4-base-dir "/Qt/qconfig-dist.h"))
;;(add-to-list 'semantic-lex-c-preprocessor-symbol-file (concat qt4-base-dir "/Qt/qglobal.h"))
   #+end_src

* Использование Semantic
1. Для дополнение имен для языков с C-подобным синтаксисом можно
   воспользоваться командой ~semantic-complete-self-insert~,
   привязанной к клавишам ~.~ и ~>~:
   #+begin_src emacs-lisp
(defun my-c-mode-cedet-hook ()
 (local-set-key "." 'semantic-complete-self-insert)
 (local-set-key ">" 'semantic-complete-self-insert))
(add-hook 'c-mode-common-hook 'my-c-mode-cedet-hook)
   #+end_src
* Настройка ECB
1. Включаем Emacs Code Browsing (ECB). У меня используется форк ECB
   от AlexOtt
   #+begin_src emacs-lisp
(require 'ecb)
   #+end_src
2. Версия ECB
   #+begin_src emacs-lisp
(setq ecb-options-version "2.40")
   #+end_src
3. Настройки окна компиляции
   #+begin_src emacs-lisp
(setq ecb-compile-window-temporally-enlarge 'after-selection)
(setq ecb-compile-window-width 'edit-window)
(setq ecb-compile-window-height 8)
   #+end_src
4. Отключение «подсказки дня»
   #+begin_src emacs-lisp
(setq ecb-tip-of-the-day nil)
   #+end_src
5. Отключаем автоматическое определение пустых директорий
   #+begin_src emacs-lisp
(setq ecb-prescan-directories-for-emptyness 0)
   #+end_src
6. Установка ширины окон.
   #+begin_src emacs-lisp
(setq ecb-windows-width 0.25)
   #+end_src
7. Комбинация клавиш для быстрой активации/деактивации ECB, 
   #+begin_src emacs-lisp
(global-set-key (kbd "\e\eE") 'ecb-activate)
(global-set-key (kbd "\e\eD") 'ecb-deactivate)
(global-set-key (kbd "\e\el") 'ecb-toggle-ecb-windows)
   #+end_src
* Настройка дополнительных пакетов для редактирования кода
1. Натройки модуля =hideshow= для свертывания кода
   #+begin_src emacs-lisp
(load-library "hideshow")
(add-hook 'c++-mode-hook  ; other modes similarly
           (lambda () (hs-minor-mode 1)))
(global-set-key (kbd "C-c @ h") 'hs-hide-block)
(global-set-key (kbd "C-c @ s") 'hs-show-block)
(global-set-key (kbd "C-c @ SPC") 'hs-toggle-hiding)
   #+end_src

2. Настройка =auto-complete=
   #+begin_src emacs-lisp
(require 'auto-complete-config)
(add-to-list 'ac-dictionary-directories "~/.emacs.d/src/auto-complete/dict")
(ac-config-default)
(defun my-c-mode-cedet-hook ()
  (add-to-list 'ac-sources 'ac-source-gtags)
  (add-to-list 'ac-sources 'ac-source-semantic))
(add-hook 'c-mode-common-hook 'my-c-mode-cedet-hook)
   #+end_src


