
#+TITLE: CEDET configurations
Настройки =CEDET= сделаны на основе [[http://alexott.net/ru/writings/emacs-devenv/EmacsCedet.html][статьи Алекса Отта]] и его
[[https://github.com/alexott/emacs-configs/blob/master/rc/emacs-rc-cedet.el][конфигурационного файла]]
* Включение =Semantic=
1. Перед включением ~Semantic~ необходимо заполнить список
   ~semsntic-default-submodes~
   1. Включение глобальной поддержки ~Semanticmdb~
      #+begin_src emacs-lisp 
(add-to-list 'semantic-default-submodes 'global-semanticdb-minor-mode)
      #+end_src
   2. Включение режима автоматического запоминания информации о
      редактируемых тагах, так что можно перейти к ним позднее с
      помощью команды ~semantic-mrub-switch-tags~
      #+begin_src emacs-lisp
(add-to-list 'semantic-default-submodes 'global-semantic-mru-bookmark-mode)
      #+end_src
   3. Активация контекстного меню, привязанного к правой клавише мыши
      (у меня не сработало)
      #+begin_src emacs-lisp
(add-to-list 'semantic-default-submodes 'global-cedet-m3-minor-mode)
      #+end_src
   4. Активация подстветки первой строки текущего тага (функции,
      класса и т.п.)
      #+begin_src emacs-lisp
(add-to-list 'semantic-default-submodes 'global-semantic-highlight-func-mode)
      #+end_src
   5. Активация автоматического анализа кода в буферах когда Emacs
      «свободен» и ожидает ввода данных от пользователя (idle time) 
      #+begin_src emacs-lisp
(add-to-list 'semantic-default-submodes 'global-semantic-idle-scheduler-mode)
      #+end_src
   6. Активация показа возможных дополнений имен во время ожидания
      ввода. Требует чтобы был включен
      ~global-semantic-idle-scheduler-mode~
      #+begin_src emacs-lisp
(add-to-list 'semantic-default-submodes 'global-semantic-idle-completions-mode)
      #+end_src
   7. Активация показа информации о текущем таге во время ожидания
      ввода. Требует чтобы был включен 
      ~global-semantic-idle-scheduler-mode~ 
      #+begin_src emacs-lisp
(add-to-list 'semantic-default-submodes 'global-semantic-idle-summary-mode)
      #+end_src
2. Включаем ~Semantic~ 
   #+begin_src emacs-lisp
   (semantic-mode 1) 
   (semantic-load-enable-excessive-code-helpers)
   (global-semantic-tag-folding-mode 1)
   #+end_src
3. Для использования  возможности по дополнению имен и показу
   информации о функциях и классах необходимо загрузить пакет
   ~semantic/ia~
   #+begin_src emacs-lisp
(require 'semantic/ia)
   #+end_src

* Системные подключаемые файлы
1. Если вы используете ~GCC~ для программирования на ~C~ & ~C++~, то пакет
   может автоматически получить данные о нахождении системных
   подключаемых файлов. Для этого вам необходимо загрузить пакет
   ~semantic/bovine/gcc~:
   #+begin_src emacs-lisp
(require 'semantic/bovine/c)
(require 'semantic/bovine/gcc)
(require 'cedet-files)
   #+end_src

* Загрузка дополнительных пакетов
  1. =Eassist=
#+begin_src emacs-lisp
(require 'eassist)
#+end_src
  2. =Autocomplete=
#+begin_src emacs-lisp
(require 'auto-complete-config)
(ac-config-default)
(setq ac-auto-start 1)
(define-key ac-mode-map [(meta return)] 'auto-complete)
(add-to-list 'ac-dictionary-directories "~/.emacs.d/src/auto-complete/dict")
#+end_src
  3. =Hideshow=
#+begin_src emacs-lisp
;;(load-library "hideshow")
#+end_src
  4. =Semantic-tag-folding=
#+begin_src emacs-lisp
;;(require 'semantic-tag-folding)
#+end_src
* Настройка =Semanticdb=
1. Настройка CEDET для работы с библиотекой Qt4.
   #+begin_src emacs-lisp
(setq qt4-base-dir "/usr/include/qt4")
(setq qwt-base-dir "/usr/include/qwt")
(setq itk-base-dir "/usr/local/include/ITK-4.5")
(setq vtk-base-dir "/usr/local/include/vtk-5.8")
(semantic-add-system-include qt4-base-dir 'c++-mode)
(semantic-add-system-include qt4-base-dir 'c-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtCore") 'c++-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtCore") 'c-mode)
(semantic-add-system-include (concat qt4-base-dir "/Qt3Support") 'c++-mode)
(semantic-add-system-include (concat qt4-base-dir "/Qt3Support") 'c-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtDBus") 'c++-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtDBus") 'c-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtDeclarative") 'c++-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtDeclarative") 'c-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtDesiner") 'c++-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtDesiner") 'c-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtGui") 'c++-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtGui") 'c-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtHelp") 'c++-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtHelp") 'c-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtNetwork") 'c++-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtNetwork") 'c-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtOpenGL") 'c++-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtOpenGL") 'c-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtScript") 'c++-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtScript") 'c-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtScriptTools") 'c++-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtScriptTools") 'c-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtSql") 'c++-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtSql") 'c-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtSvg") 'c++-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtSvg") 'c-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtTest") 'c++-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtTest") 'c-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtUiTools") 'c++-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtUiTools") 'c-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtWebKit") 'c++-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtWebKit") 'c-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtXml") 'c++-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtXml") 'c-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtXmlPatterns") 'c++-mode)
(semantic-add-system-include (concat qt4-base-dir "/QtXmlPatterns") 'c-mode)
(semantic-add-system-include qwt-base-dir 'c++-mode)
(semantic-add-system-include qwt-base-dir 'c-mode)
(semantic-add-system-include itk-base-dir 'c++-mode)
(semantic-add-system-include itk-base-dir 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/blas") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/blas") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/datapac") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/datapac") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/egcs") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/egcs") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/eispac") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/eispac") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/emulation") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/emulation") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/gcc") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/gcc") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/gcc-libstdcxx-v3") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/gcc-libstdcxx-v3") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/gdcmjpeg") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/gdcmjpeg") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/generic") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/generic") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/internal") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/internal") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/iso") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/iso") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/itkfdstream") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/itkfdstream") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/itkhdf5") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/itkhdf5") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/itkjpeg") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/itkjpeg") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/itkpng") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/itkpng") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/itksys") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/itksys") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/itkzlib") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/itkzlib") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/lapack") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/lapack") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/laso") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/laso") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/linpack") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/linpack") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/mathews") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/mathews") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/minpack") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/minpack") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/mwerk") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/mwerk") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/napack") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/napack") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/opt") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/opt") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/sgi") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/sgi") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/saprse") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/sparse") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/stlport") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/stlport") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/sunpro") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/sunpro") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/temperton") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/temperton") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/vcl_sys") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/vcl_sys") 'c-mode)
(semantic-add-system-include (concat itk-base-dir "/vnl") 'c++-mode)
(semantic-add-system-include (concat itk-base-dir "/vnl") 'c-mode)
(semantic-add-system-include vtk-base-dir 'c++-mode)
(semantic-add-system-include vtk-base-dir 'c-mode)
(semantic-add-system-include (concat vtk-base-dir "/alglib") 'c++-mode)
(semantic-add-system-include (concat vtk-base-dir "/alglib") 'c-mode)
(semantic-add-system-include (concat vtk-base-dir "/Cosmo") 'c++-mode)
(semantic-add-system-include (concat vtk-base-dir "/Cosmo") 'c-mode)
(semantic-add-system-include (concat vtk-base-dir "/internal") 'c++-mode)
(semantic-add-system-include (concat vtk-base-dir "/internal") 'c-mode)
(semantic-add-system-include (concat vtk-base-dir "/mrmpi") 'c++-mode)
(semantic-add-system-include (concat vtk-base-dir "/mrmpi") 'c-mode)
(semantic-add-system-include (concat vtk-base-dir "/TclTk") 'c++-mode)
(semantic-add-system-include (concat vtk-base-dir "/TclTk") 'c-mode)
(semantic-add-system-include (concat vtk-base-dir "/VPIC") 'c++-mode)
(semantic-add-system-include (concat vtk-base-dir "/VPIC") 'c-mode)
(semantic-add-system-include (concat vtk-base-dir "/vtkexpat") 'c++-mode)
(semantic-add-system-include (concat vtk-base-dir "/vtkexpat") 'c-mode)
(semantic-add-system-include (concat vtk-base-dir "/vtklibproj4") 'c++-mode)
(semantic-add-system-include (concat vtk-base-dir "/vtklibproj4") 'c-mode)
(semantic-add-system-include (concat vtk-base-dir "/vtkmetaio") 'c++-mode)
(semantic-add-system-include (concat vtk-base-dir "/vtkmetaio") 'c-mode
)(semantic-add-system-include (concat vtk-base-dir "/vtknetcfd") 'c++-mode)
(semantic-add-system-include (concat vtk-base-dir "/vtknetcfd") 'c-mode)
(semantic-add-system-include (concat vtk-base-dir "/vtksqlite") 'c++-mode)
(semantic-add-system-include (concat vtk-base-dir "/vtksqlite") 'c-mode)
(semantic-add-system-include (concat vtk-base-dir "/vtkstd") 'c++-mode)
(semantic-add-system-include (concat vtk-base-dir "/vtkstd") 'c-mode)
(semantic-add-system-include (concat vtk-base-dir "/vtksys") 'c++-mode)
(semantic-add-system-include (concat vtk-base-dir "/vtksys") 'c-mode)
(add-to-list 'auto-mode-alist (cons qt4-base-dir 'c++-mode))
(add-to-list 'auto-mode-alist (cons qt4-base-dir 'c-mode))
(add-to-list 'semantic-lex-c-preprocessor-symbol-file (concat qt4-base-dir "/Qt/qconfig.h"))
(add-to-list 'semantic-lex-c-preprocessor-symbol-file (concat qt4-base-dir "/Qt/qconfig-dist.h"))
(add-to-list 'semantic-lex-c-preprocessor-symbol-file (concat qt4-base-dir "/Qt/qglobal.h"))
   #+end_src
   
* Настройка режимов
  1. Привязка клавиш к командам =Semantic=
  #+begin_src emacs-lisp
(defun svl/cedet-hook()
  (local-set-key [(control return)] 'semantic-ia-complete-symbol-menu)
  (local-set-key "\C-c?" 'semantic-ia-complete-symbol)

  (local-set-key "\C-c>" 'semantic-comsemantic-ia-complete-symbolplete-analyze-inline)
  (local-set-key "\C-c=" 'semantic-decoration-include-visit)

  (local-set-key "\C-cj" 'semantic-ia-fast-jump)
  (local-set-key "\C-cq" 'semantic-ia-show-doc)
  (local-set-key "\C-cs" 'semantic-ia-show-summary)
  (local-set-key "\C-cp" 'semantic-analyze-proto-impl-toggle)
  (local-set-key "\C-cf" 'senator-fold-tag)
  (local-set-key "\C-cu" 'senator-unfold-tag)
  (local-set-key "\C-c\C-t" 'senator-fold-tag-toggle)

  (add-to-list 'ac-sources 'ac-source-semantic)
)
(defun svl/c-mode-cedet-hook ()
  (local-set-key "\C-ct" 'eassist-switch-h-cpp)
  (local-set-key "\C-xt" 'eassist-switch-h-cpp)
  (local-set-key "\C-ce" 'eassist-list-methods)
  (local-set-key "\C-c\C-r" 'semantic-symref)

  (add-to-list 'ac-sources 'ac-source-gtags)
)

(add-hook 'c-mode-common-hook 'svl/cedet-hook)
(add-hook 'c-mode-common-hook 'svl/c-mode-cedet-hook)
  #+end_src
  2. Включаем поддержку =gnu global=
#+begin_src emacs-lisp
(when (cedet-gnu-global-version-check t)
  (semanticdb-enable-gnu-global-databases 'c-mode t)
  (semanticdb-enable-gnu-global-databases 'c++-mode t))
#+end_src
  3. Включаем поддержку =ectags= 
#+begin_src emacs-lisp
(when (cedet-ectag-version-check t)
  (semantic-load-enable-primary-ectags-support))
  #+end_src
* =SRecode=
  #+begin_src emacs-lisp
;(global-srecode-minor-mode 1)
  #+end_src
* Настройка ECB
1. Включаем Emacs Code Browsing (ECB). У меня используется форк ECB
   от Алекса Отта
#+begin_src emacs-lisp
(require 'ecb)
#+end_src
2. Версия ECB
#+begin_src emacs-lisp
(setq ecb-options-version "2.40")
#+end_src
3. Настройки окна компиляции
#+begin_src emacs-lisp
(setq ecb-compile-window-temporally-enlarge 'after-selection)
(setq ecb-compile-window-width 'edit-window)
(setq ecb-compile-window-height 8)
#+end_src
4. Отключение «подсказки дня»
#+begin_src emacs-lisp
(setq ecb-tip-of-the-day nil)
#+end_src
5. Отключаем автоматическое определение пустых директорий
#+begin_src emacs-lisp
(setq ecb-prescan-directories-for-emptyness 0)
#+end_src
6. Установка ширины окон.
#+begin_src emacs-lisp
(setq ecb-windows-width 0.2)
#+end_src
7. Комбинация клавиш для быстрой активации/деактивации ECB, 
#+begin_src emacs-lisp
(global-set-key (kbd "\e\eE") 'ecb-activate)
(global-set-key (kbd "\e\eD") 'ecb-deactivate)
(global-set-key (kbd "\e\el") 'ecb-toggle-ecb-windows)
#+end_src
* Настройка дополнительных пакетов для редактирования кода
1. Настройки модуля =hideshow= для свертывания кода
   #+begin_src emacs-lisp
;;(add-hook 'c++-mode-hook  ; other modes similarly
;;           (lambda () (hs-minor-mode 1)))
;;(add-hook 'c-mode-common-hook  ; other modes similarly
;;           (lambda () (hs-minor-mode 1)))
;;(global-set-key (kbd "C-c @ h") 'hs-hide-block)
;;(global-set-key (kbd "C-c @ s") 'hs-show-block)
;;(global-set-key (kbd "C-c @ SPC") 'hs-toggle-hiding)
   #+end_src

* Режим =cmake-mode=
  #+begin_src emacs-lisp
(setq auto-mode-alist
	  (append
	   '(("CMakeLists\\.txt\\'" . cmake-mode))
	   '(("\\.cmake\\'" . cmake-mode))
	   auto-mode-alist))
  #+end_src
* Режим =python-mode= для ~ufl~
  #+begin_src emacs-lisp
(setq auto-mode-alist
	  (append
	   '(("\\.ufl\\'" . python-mode))
	   auto-mode-alist))
  #+end_src
* Режим =makefile-mode= для ~pro~
  #+begin_src emacs-lisp
(setq auto-mode-alist
	  (append
	   '(("\\.pro\\'" . makefile-mode))
	   auto-mode-alist))
  #+end_src
* Включение =sr-speedbar=
#+begin_src emacs-lisp
(require 'sr-speedbar)
(global-set-key (kbd "<f5>") 'sr-speedbar-toggle)
#+end_src
